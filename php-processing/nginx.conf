worker_processes auto; # nproc -> number of core cpu

load_module modules/ngx_http_image_filter_module.so;

# worker_processes x worker_connections = max connections
events {
  worker_connections 1024; # ulimit -n -> limit how many file can be open at once for each cpu core
}

http {
 include mime.types;

 # Delays processing of unauthorized requests with 401 response code to prevent
 # timing attacks when access is limited by password, by the result of subrequest, or by JWT
 auth_delay 10s;

 # buffer size for post submissions
 # Sets buffer size for reading client request body. In case the request body is larger than the buffer,
 # the whole body or only its part is written to a temporary file
 client_body_buffer_size 16k;
 # Sets the maximum allowed size of the client request body.
 # If the size in a request exceeds the configured value, the 413 (Request Entity Too Large) error is returned to the client
 client_max_body_size 0;

 # buffer size for headers 
 # Sets buffer size for reading client request header. For most requests, a buffer of 1K bytes is enough. However,
 # if a request includes long cookies, or comes from a WAP client, it may not fit into 1K.
 client_header_buffer_size 16k;

 # max time to receive client header/body
 client_body_timeout 60s;
 client_header_timeout 60s;

 # max time to keep a connection open for
 keepalive_timeout 75s;

 # max time for the client accept response from the server
 send_timeout 60s;

 # skip buffering for static files
 sendfile on;
 # optimize sendfile packets
 tcp_nopush on;

 server {
   listen 80;
   server_name _;

   root /var/www/html;

   index index.php index.html;

   location / {
     try_files $uri $uri/ =404;
   }

   location = /thumb.png {
     image_filter crop $arg_width $arg_height;
     image_filter rotate $arg_rotate;
   }

   location ~* \.(css|js|jpg|jpeg|png)$ {
     access_log off;
     add_header Cache-Control public;
     add_header Pragma public;
     add_header Vary Accept-Encoding;
     expires 30s;
   }

   location ~ \.php$ {
     include fastcgi.conf;
     fastcgi_pass php:9000;
   }
 }
}
